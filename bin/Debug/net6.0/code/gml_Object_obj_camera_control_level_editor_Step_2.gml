targetx += ((global.input_camera_move_x * cam_zoom) * 10)
targety += ((global.input_camera_move_y * cam_zoom) * 10)
cam_zoom_target *= power(1.015, (-global.input_camera_zoom_in))
targetx = clamp(targetx, obj_level_editor.level_bound_x1, obj_level_editor.level_bound_x2)
targety = clamp(targety, obj_level_editor.level_bound_y1, obj_level_editor.level_bound_y2)
cam_zoom_target = clamp(cam_zoom_target, global.setting_camzoom_min, global.setting_camzoom_max)
cam_zoom = lerp(cam_zoom, cam_zoom_target, camera_lerp_speed)
camx = lerp(camx, targetx, camera_lerp_speed)
camy = lerp(camy, targety, camera_lerp_speed)
camw = (cam_base_width * cam_zoom)
camh = (cam_base_height * cam_zoom)
cam_off_x = ((((random(1) - 0.5) * global.screenshake) * global.setting_screenshake) / cam_zoom)
cam_off_y = ((((random(1) - 0.5) * global.screenshake) * global.setting_screenshake) / cam_zoom)
cam_off_rot = ((((random(1) - 0.5) * global.screenshake) * global.setting_screenshake) * 0.015)
camx1 = ((camx - (camw * 0.5)) + cam_off_x)
camy1 = ((camy - (camh * 0.5)) + cam_off_y)
camx2 = ((camx + (camw * 0.5)) + cam_off_x)
camy2 = ((camy + (camh * 0.5)) + cam_off_y)
camera_set_view_pos(cam, camx1, camy1)
camera_set_view_size(cam, camw, camh)
camera_set_view_angle(cam, (cam_angle + cam_off_rot))
global.screenshake *= 0.9
